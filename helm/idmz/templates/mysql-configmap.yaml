{{- if and .Values.guacamole.enabled .Values.guacamole.sql.enabled .Values.certManager.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ printf "%s-mysql" .Release.Name }}
  namespace: {{ .Release.Namespace | quote }}
data:
  initdb.sh: |
    #!/bin/bash
    # Initialize MySQL database.
    # Add this into the container via mount point.
    # This should be in the same folder as the guacamole initdb.sql.script file.
    # This file is executed before initdb.sql.script as files are executed in alphabetical order.
    while ! mysqladmin -uroot -p$MYSQL_ROOT_PASSWORD ping -hlocalhost --silent; do
        sleep 1
    done
    sleep 1
    mysql -uroot -p$MYSQL_ROOT_PASSWORD --force -e "FLUSH PRIVILEGES;" || true
    # Not required since it's created by the entrypoint with the env. mysql -uroot -p$MYSQL_ROOT_PASSWORD --force -e "CREATE DATABASE $MYSQL_DATABASE;" || true
    # I don't think this is required? mysql -uroot -p$MYSQL_ROOT_PASSWORD --force -e "CREATE USER '$MYSQL_USER'@'%' IDENTIFIED WITH mysql_native_password BY '$MYSQL_PASSWORD';" || true
    mysql -uroot -p$MYSQL_ROOT_PASSWORD --force -e "GRANT SELECT,INSERT,UPDATE,DELETE ON $MYSQL_DATABASE.* TO '$MYSQL_USER'@'%';" || true
    mysql -uroot -p$MYSQL_ROOT_PASSWORD --force -e "FLUSH PRIVILEGES;" || true
    mysql -uroot -p$MYSQL_ROOT_PASSWORD --force $MYSQL_DATABASE < /mysqlinit/initdb.sql || true
    mysql -uroot -p$MYSQL_ROOT_PASSWORD --force -e "USE $MYSQL_DATABASE; SET @salt = UNHEX(SHA2(UUID(), 256));INSERT INTO guacamole_entity (name, type) VALUES ('guacadmin', 'USER') ON DUPLICATE KEY UPDATE name='guacadmin', type='USER';INSERT INTO guacamole_user (entity_id,password_salt,password_hash,password_date) SELECT entity_id,@salt,UNHEX(SHA2(CONCAT('$GUACADMIN_PASSWORD', HEX(@salt)), 256)),CURRENT_TIMESTAMP FROM guacamole_entity WHERE name = 'guacadmin' AND type = 'USER' ON DUPLICATE KEY UPDATE password_salt=@salt,password_hash=UNHEX(SHA2(CONCAT('$GUACADMIN_PASSWORD', HEX(@salt)), 256)),password_date=CURRENT_TIMESTAMP;" || true
{{- end }}
