{{ if .Values.certManager.enabled }}
apiVersion: cert-manager.io/v1
kind: {{ .Values.certManager.kind }}
metadata:
  name: {{ printf "%s-cert-manager" .Release.Name }}
  {{- if eq .Values.certManager.kind "Issuer" }}
  namespace: {{ $.Release.Namespace | quote }}
  {{- end }}
  {{- if eq .Values.certManager.kind "ClusterIssuer" }}
  namespace: cert-manager
  {{- end }}
spec:
  acme:
    email: {{ .Values.certManager.email }}
    server: {{ .Values.certManager.acmeServer }}
    {{- if ne .Values.certManager.acmeExternalAccountKeyId "" }}
    externalAccountBinding:
      keyID: {{ .Values.certManager.acmeExternalAccountKeyId }} 
      keySecretRef:
        name: {{ printf "%s-cert-manager-external-account-key" .Release.Name }}
        key: acme_external_account_key
    {{- end }}
    privateKeySecretRef:
      name: {{ printf "%s-acme-private-key" .Release.Name }}
    solvers:
      - selector: {}
        dns01:
          {{- if eq .Values.certManager.dnsProvider "route53" }}
          route53:
            region: {{ .Values.certManager.route53Region }}
            accessKeyID: {{ .Values.certManager.route53AccessKeyId }}
            secretAccessKeySecretRef:
              name: {{ printf "%s-cert-manager-dns01-key" .Release.Name }}
              key: secret_access_key
            {{- if ne .Values.certManager.route53HostedZoneId "" }}
            hostedZoneID: {{ .Values.certManager.route53HostedZoneId }}
            {{- end }}
          {{- end }}
          {{- if eq .Values.certManager.dnsProvider "cloudflare" }}
          cloudflare:
            email: {{ .Values.certManager.email }}
            apiTokenSecretRef:
              name: {{ printf "%s-cert-manager-dns01-key" .Release.Name }}
              key: secret_access_key
          {{- end }}
{{- end }}
